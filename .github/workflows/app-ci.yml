name: Application_CI

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/app-ci.yml'
      - 'App/app/**'
      - 'App/tests/**'
      - 'App/Dockerfile'
      - 'App/requirements.txt'
  workflow_run:
    workflows: ["K8S_Deployment", "Terraform_Infra"]
    types:
      - completed 

jobs:
  build:
    runs-on: self-hosted

    if: |
      github.event_name == 'push' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GIT_PAT }}

    - name: Install Python
      run: |
        sudo yum update -y
        sudo yum install python3 -y
        sudo yum install -y python3-pip
        python3 -m pip install --upgrade pip

    - name: Install Docker
      run: |
        sudo yum install -y docker
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo usermod -aG docker $USER
        newgrp docker
        sudo chmod 666 /var/run/docker.sock

    - name: Install Dependencies
      run: |
        pip install -r App/requirements.txt
        pip install pytest
        sudo yum install -y git

    - name: Run Unit Tests
      run: |
        cd App
        PYTHONPATH=$PYTHONPATH:$(pwd) pytest tests/test_app.py

    - name: Get Current Version
      id: get_version
      run: |
        VERSION=$(cat App/VERSION)
        echo "version=$VERSION" >> $GITHUB_ENV

    - name: Bump Version
      id: version
      run: |
        VERSION=$(cat App/VERSION)
        NEW_VERSION=$(echo $VERSION | awk -F. '{print $1"."$2"."$3+1}')
        echo $NEW_VERSION > App/VERSION
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

    - name: Commit Version Bump
      env:
        GIT_PAT: ${{ secrets.GIT_PAT }}
        GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
        GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
      run: |
        git config user.name "$GIT_USERNAME"
        git config user.email "$env.GIT_EMAIL"
        git remote set-url origin https://${GIT_PAT}@github.com/${GIT_USERNAME}/finProj.git
        git add App/VERSION
        git commit -m "Bump version to ${{ env.new_version }}"
        git push --force

    - name: Build Docker Image
      run: |
        VERSION=$(cat App/VERSION)
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:${{ env.new_version }} App

    - name: Create scan results directory
      run: mkdir -p scan-results

    - name: Trivy Security Scan
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:${{ env.new_version }}
        format: 'table'
        output: 'scan-results/trivy-results.txt'

    - name: Upload Trivy scan results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-scan-results
        path: scan-results/trivy-results.txt
        retention-days: 7  # Keep results for 7 days

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-app:${{ env.new_version }}

    